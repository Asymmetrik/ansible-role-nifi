---
- name: Register config.json for private keys
  shell: cat {{ nifi_etc_dir }}/config.json | grep Password
  register: config_result

- name: copy nifi configs
  vars:
    conf_passwds: "{{ config_result.stdout_lines }}"
    nifi_key_store_password: "{{ conf_passwds[0].split(':')[1][2:-2] }}"
    nifi_trust_store_password: "{{ conf_passwds[2].split(':')[1][2:-2] }}"

  template: src="{{ item.src }}" dest="{{ item.dest }}" owner="{{ nifi_user }}" group="{{ nifi_user }}" mode='0644'
  with_items:
    - { src: "{{ nifi_major_version }}/nifi.properties.j2", dest: "{{nifi_conf_dir}}/nifi.properties" }
    - { src: 'extra-args.properties.j2', dest: "{{nifi_conf_dir}}/extra-args.properties" }
  notify:
    - restart nifi
  tags: [ deploy, prop, props ]

- name: copy nifi configs
  template: src="{{ item.src }}" dest="{{ item.dest }}" owner="{{ nifi_user }}" group="{{ nifi_user }}" mode='0644'
  with_items:
    - { src: "{{ nifi_major_version }}/authorizers.xml.j2", dest: "{{nifi_conf_dir}}/authorizers.xml" }
    - { src: "{{ nifi_major_version }}/bootstrap.conf.j2", dest: "{{nifi_conf_dir}}/bootstrap.conf" }
    - { src: "{{ nifi_major_version }}/bootstrap-notification-services.xml.j2", dest: "{{nifi_conf_dir}}/bootstrap-notification-services.xml" }
    - { src: "{{ nifi_major_version }}/logback.xml.j2", dest: "{{nifi_conf_dir}}/logback.xml" }
    - { src: "{{ nifi_major_version }}/login-identity-providers.xml.j2", dest: "{{nifi_conf_dir}}/login-identity-providers.xml" }
    - { src: "{{ nifi_major_version }}/state-management.xml.j2", dest: "{{nifi_conf_dir}}/state-management.xml" }
    - { src: "{{ nifi_major_version }}/zookeeper.properties.j2", dest: "{{nifi_conf_dir}}/zookeeper.properties" }
  notify:
    - restart nifi
  tags: [ config ]

- name: copy nifi scripts
  template: src="{{ item.src }}" dest="{{ item.dest }}" owner="{{ nifi_user }}" group="{{ nifi_user }}" mode='0755'
  with_items:
    - { src: "{{ nifi_major_version }}/nifi.sh.j2", dest: "{{ nifi_home }}/bin/nifi.sh" }
    - { src: "{{ nifi_major_version }}/nifi-env.sh.j2", dest: "{{ nifi_home }}/bin/nifi-env.sh" }

- name: Ensure NiFi is running
  service: name=nifi state=started enabled=yes

- name: Ensure NiFi is restarted
  service: name=nifi state=restarted
  when: nifi_force_restart
